{"version":3,"sources":["web3/web3.js","contracts/rockps.js","App.js","serviceWorker.js","index.js"],"names":["web3","Web3","window","currentProvider","rockps","eth","Contract","constant","inputs","name","outputs","type","payable","stateMutability","LOADING","ST1","NOT_COMMITTED","COMMITTED","ST2","NOT_REVEALED","REVEALED","PENDING","ACT","SENDING","SENT","NONE","YES","NO","NA","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","newGame","last","setState","players","addr","status1","status2","act","playerCount","canBeFinalised","choice0","choice1","nounce0","nounce1","indexToChoice","index","indexToNounce","handleChangeChoice","event","defineProperty","target","value","handleChangeNounce","handleChoice","state","handleNounce","handleSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","accounts","choice","nounce","commit","wrap","_context","prev","next","preventDefault","t0","objectSpread","abrupt","getAccounts","sent","utils","soliditySha3","methods","enterCommitment","send","from","stop","_x","_x2","apply","arguments","handleReveal","_ref2","_callee2","_context2","reveal","_x3","_x4","handleFinalSubmit","_callee3","_context3","finaliseGame","latestWinner","bind","assertThisInitialized","getLastest","parseInt","gameCount","getPlayerCount","getPlayers","playerAddr","push","getRevealed","hasRevealed","_this2","FinaliseButton","react_default","createElement","className","Button","color","onClick","CommitForm","Form","onSubmit","FormGroup","Label","for","Input","id","onChange","placeholder","RevealForm","ShowAction","player","ac","Fragment","status","Commit","CardText","Reveal","Player","Card","CardHeader","tag","CardBody","CardFooter","Jumbotron","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ada34295.chunk.js","sourcesContent":["// configuration of web3\nimport Web3 from 'web3';\n\n// hijacking the provider from metamask instance of web3\n// this provider has been configured to access the Rinkeby network but also has access to my accounts\nconst web3 = new Web3(window.web3.currentProvider);\n\nexport default web3;","import web3 from '../web3/web3';\n\nexport const rockpsAddress = '0x2018cb189c00f48d5f013174b790d6fac9f458ad';\nexport const rockpsInterface = [\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"latestWinner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"reward\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"commit\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"enterCommitment\",\n\t\t\"outputs\": [],\n\t\t\"payable\": true,\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"gameCount\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [],\n\t\t\"name\": \"finaliseGame\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getPlayers\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"choice\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"nounce\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"reveal\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getRevealed\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool[2]\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"choice\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"nounce\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getKeccack0\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getPlayerCount\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"candidate\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"notAlreadyIn\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"requiredValue\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t}\n];\n\nexport default new web3.eth.Contract(rockpsInterface, rockpsAddress);","import React, { Component } from 'react';\nimport './App.css';\nimport rockps from './contracts/rockps';\nimport web3 from './web3/web3';\nimport { Jumbotron, Button, Card, CardHeader, CardBody, CardText, CardFooter, Form, FormGroup, Label, Input } from 'reactstrap';\n\n// Notes:\n// Metamask only avec 1 account (the selected one) in accounts\n\nconst LOADING = '...loading';\n\nconst ST1 = {\n  NOT_COMMITTED: 'Has not picked his/her choice yet',\n  COMMITTED: 'Has sent his/her commitment',\n};\n\nconst ST2 = {\n  NOT_REVEALED: 'Has not revealed his/her choice yet',\n  REVEALED: 'Has revealed his/her choice',\n  PENDING: 'Waiting for the other player...',\n};\n\nconst RESULT = {\n  WON: 'Has won!',\n  LOST: 'Has lost... ;-(',\n  DRAW: 'It\\'s a draw!'\n};\n\nconst ACT = {\n  SENDING: 'Sending transaction...',\n  SENT: 'Transaction sent!',\n  NONE: ''\n};\n\nconst YES = 'Yes';\nconst NO = 'No';\nconst NA = 'N/A';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [\n        { addr: LOADING, status1: LOADING, status2: LOADING, act: LOADING }, \n        { addr: LOADING, status1: LOADING, status2: LOADING, act: LOADING }],\n      playerCount: 0,\n      canBeFinalised: LOADING,\n      last: LOADING,\n      choice0: 0,\n      choice1: 0,\n      nounce0: 0,\n      nounce1: 0\n    };\n\n    this.handleChangeChoice = this.handleChangeChoice.bind(this);\n    this.handleChangeNounce = this.handleChangeNounce.bind(this);\n    this.handleChoice = this.handleChoice.bind(this);\n    this.handleNounce = this.handleNounce.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFinalSubmit = this.handleFinalSubmit.bind(this);\n    this.newGame = this.newGame.bind(this);\n  };\n\n  async componentDidMount() {\n    let canBeFinalised = NO;\n    \n    const getLastest = await rockps.methods.latestWinner().call();\n    let gameCount = parseInt(await rockps.methods.gameCount().call());\n    let last = 'game not played yet';\n    if (gameCount !== 0) { \n      (getLastest === '0x0000000000000000000000000000000000000000') \n        ? last = 'draw'\n        : last = getLastest ;\n    };\n\n    const playerCount = parseInt(await rockps.methods.getPlayerCount().call());\n    const playerAddr = await rockps.methods.getPlayers().call();\n\n    const players = [];\n    switch(playerCount) {\n      case 0:\n        players.push({ addr: NA, status1: ST1.NOT_COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE });\n        players.push({ addr: NA, status1: ST1.NOT_COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE });\n        break;\n      case 1:\n        players.push({ addr: playerAddr[0], status1: ST1.COMMITTED, status2: ST2.PENDING, act: ACT.NONE });\n        players.push({ addr: NA, status1: ST1.NOT_COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE });\n        break;\n      case 2:\n        const hasRevealed = await rockps.methods.getRevealed().call();\n        if (hasRevealed[0] && hasRevealed[1]) {\n          players.push({ addr: playerAddr[0], status1: ST1.COMMITTED, status2: ST2.REVEALED, act: ACT.NONE });\n          players.push({ addr: playerAddr[1], status1: ST1.COMMITTED, status2: ST2.REVEALED, act: ACT.NONE });\n          canBeFinalised = YES;\n        }\n        else if (!hasRevealed[0] && !hasRevealed[1]) {\n          players.push({ addr: playerAddr[0], status1: ST1.COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE });\n          players.push({ addr: playerAddr[1], status1: ST1.COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE });\n        }\n        else {\n          if (hasRevealed[0]) {\n            players.push({ addr: playerAddr[0], status1: ST1.COMMITTED, status2: ST2.REVEALED, act: ACT.NONE});\n            players.push({ addr: playerAddr[1], status1: ST1.COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE });\n          }\n          else {\n            players.push({ addr: playerAddr[0], status1: ST1.COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE });\n            players.push({ addr: playerAddr[1], status1: ST1.COMMITTED, status2: ST2.REVEALED, act: ACT.NONE });\n          }\n        }\n        break;\n      default:\n    };\n\n    this.setState({ players, playerCount, canBeFinalised, last }); // check if input should be added here\n  };\n\n  newGame = (last) => {\n    this.setState({\n      players: [\n        { addr: NA, status1: ST1.NOT_COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE }, \n        { addr: NA, status1: ST1.NOT_COMMITTED, status2: ST2.NOT_REVEALED, act: ACT.NONE } ],\n      playerCount: 0,\n      canBeFinalised: NO,\n      last: last,\n      choice0: 0,\n      choice1: 0,\n      nounce0: '',\n      nounce1: ''\n    });\n  };\n\n  indexToChoice = (index) => { return 'choice' + index; };\n  indexToNounce = (index) => { return 'nounce' + index; };\n\n  handleChangeChoice = (event, index) => { \n    this.setState({ [this.indexToChoice(index)]: event.target.value }); \n  };\n  handleChangeNounce = (event, index) => { \n    this.setState({ [this.indexToNounce(index)]: event.target.value }); \n  };\n\n  handleChoice = (index) => { return this.state[this.indexToChoice(index)]; };\n  handleNounce = (index) => { return this.state[this.indexToNounce(index)]; };\n\n  handleSubmit = async (index, event) => {\n    event.preventDefault();\n    switch(index) {\n      case 0:\n        this.setState({ \n          players: [\n            {...this.state.players[0], act: ACT.SENDING }, \n            this.state.players[1] ]\n        });\n        break;\n      case 1:\n        this.setState({ \n          players: [  \n            this.state.players[0],\n            {...this.state.players[1], act: ACT.SENDING}, ]\n        });\n        break;\n      default:\n    };\n    const accounts = await web3.eth.getAccounts();\n    const choice = (index===0) ? this.state.choice0 : this.state.choice1;\n    const nounce = (index===0) ? this.state.nounce0 : this.state.nounce1;\n    // Check type of choice and nouce in sha3 and impact on result\n\n    const commit = web3.utils.soliditySha3(choice, nounce);\n    // TODO: add address in the commit?\n\n    await rockps.methods.enterCommitment(commit).send({ \n      from: accounts[0],\n      value: 1000 \n    });\n\n    const players = (index===0) \n      ? [ {...this.state.players[0], \n          addr: accounts[0], act: ACT.SENT, status1: ST1.COMMITTED } ,\n        this.state.players[1] ]\n      : [this.state.players[0],\n        {...this.state.players[1], \n          addr: accounts[0], act: ACT.SENT, status1: ST1.COMMITTED }, ] ;\n          \n    const playerCount = this.state.playerCount + 1;\n\n    this.setState({ players, playerCount });\n  };\n\n  handleReveal = async (index, event) => {\n    event.preventDefault();\n    switch(index) {\n      case 0:\n        this.setState({ \n          players: [\n            {...this.state.players[0], act: ACT.SENDING }, \n            this.state.players[1] ]\n        });\n        break;\n      case 1:\n        this.setState({ \n          players: [  \n            this.state.players[0],\n            {...this.state.players[1], act: ACT.SENDING}, ]\n        });\n        break;\n      default:\n    };\n\n    const accounts = await web3.eth.getAccounts();\n    const choice = (index===0) ? this.state.choice0 : this.state.choice1;\n    const nounce = (index===0) ? this.state.nounce0 : this.state.nounce1;\n\n    await rockps.methods.reveal(choice,nounce).send({ from: accounts[0] });\n\n    const players = (index===0) \n      ? [ {addr: accounts[0], act: ACT.SENT, status2: ST2.REVEALED } ,\n        this.state.players[1] ]\n      : [this.state.players[0],\n        {addr: accounts[0], act: ACT.SENT, status2: ST2.REVEALED }, ]; \n        \n    const canBeFinalised = (this.state.players[0].status2 === ST2.REVEALED && this.state.players[1].status2 === ST2.REVEALED) ? YES : NO;\n\n    this.setState({ players, canBeFinalised });\n  };\n\n  handleFinalSubmit = async () => {\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ canBeFinalised: 'Fetching winner... ' });\n    await rockps.methods.finaliseGame().send({ from: accounts[0] });\n    const last = await rockps.methods.latestWinner().call();\n\n    (last === '0x0000000000000000000000000000000000000000')\n      ? this.newGame('draw')\n      : this.newGame(last);\n  };\n\n  render() {\n\n    const FinaliseButton = () => {\n      if (this.state.canBeFinalised === YES) {\n        return (\n          <p className=\"lead\">\n            <Button color=\"primary\" onClick={this.handleFinalSubmit}>Check winner</Button>\n          </p>\n        );\n      }\n      else { return( <div /> )}\n    };\n    \n    const CommitForm = (props) => {\n      return(\n        <Form onSubmit={(event) => this.handleSubmit(props.index, event)}>\n          <FormGroup>\n            <Label for=\"choice\">Pick a choice</Label>\n            <Input type=\"select\" id=\"choice\" name=\"choice\" \n            value={this.handleChoice(props.index)} \n            onChange={(event) => this.handleChangeChoice(event, props.index)}>\n              <option value=\"0\">Rock</option>\n              <option value=\"1\">Paper</option>\n              <option value=\"2\">Scissor</option>\n            </Input>\n            <Label for=\"nounce\">Pick a secret number</Label>\n            <Input type=\"text\" id=\"nounce\" name=\"nounce\" \n            value={this.handleNounce(props.index)} \n            onChange={(event) => this.handleChangeNounce(event, props.index)}\n            placeholder=\"your secret number\">\n            </Input>\n          </FormGroup>\n          <Button>Commit</Button>\n        </Form>\n      );\n    };\n    \n    const RevealForm = (props) => {\n      return(\n        <Form onSubmit={(event) => this.handleReveal(props.index, event)}>\n          <FormGroup>\n            <Label for=\"choice\">Pick your choice</Label>\n            <Input type=\"select\" id=\"choice\" name=\"choice\" \n            value={this.handleChoice(props.index)} \n            onChange={(event) => this.handleChangeChoice(event, props.index)}>\n              <option value=\"0\">Rock</option>\n              <option value=\"1\">Paper</option>\n              <option value=\"2\">Scissor</option>\n            </Input>\n            <Label for=\"nounce\">Pick your secret number</Label>\n            <Input type=\"text\" id=\"nounce\" name=\"nounce\" \n            value={this.handleNounce(props.index)} \n            onChange={(event) => this.handleChangeNounce(event, props.index)}\n            placeholder=\"your secret number\">\n            </Input>\n          </FormGroup>\n          <Button>Reveal</Button>\n        </Form>\n      );\n    };\n    \n    const ShowAction = (props) => {\n      if (props.player.ac !== ACT.NONE ) {\n          return (<> {props.player.status} </>);\n        }\n      else { return (<> </>); }\n    };\n\n    const Commit = (props) => {\n      if (props.player.status1 === ST1.NOT_COMMITTED) {\n        return ( <CommitForm index={props.index}/> );\n      }\n      else {\n        return (\n          <>\n            <CardText>{props.player.status1}</CardText> \n            <CardText>Contract used: {props.player.addr}</CardText>\n          </>\n        );\n      }\n    }\n\n    const Reveal = (props) => {\n      if ( props.player.status1 === ST1.COMMITTED\n      && props.player.status2 === ST2.NOT_REVEALED) {\n        return (\n          <RevealForm index={props.index}/>\n        );\n      }\n      else {\n        return (\n          <>\n            <CardText>{props.player.status2}</CardText> \n          </>\n        );\n      }\n    }\n\n    const Player = (props) => {\n      // const color = (props.player.playing === YES) ? 'primary' : 'secondary';\n\n      return (\n        // <Card outline color={color}>\n        <Card>\n          <CardHeader tag=\"h4\">{props.name}</CardHeader>\n          <div>\n            <CardHeader tag=\"h6\">Phase 1: Commit</CardHeader>\n            <CardBody>\n              <Commit \n                index={props.index} \n                player={props.player} />\n            </CardBody>\n          </div>\n          <div>\n            <CardHeader tag=\"h6\">Phase 2: Reveal</CardHeader>\n            <CardBody>\n              <Reveal\n                index={props.index} \n                player={props.player} />\n            </CardBody>\n          </div>\n          <CardFooter className=\"text-muted\">\n            <ShowAction\n              index={props.index} \n              player={props.player} />\n          </CardFooter>\n        </Card>\n      );\n    };\n\n    const Header = () => {\n      return(\n        <Jumbotron>\n          <div>\n            <h1 className=\"display-3\">Rock Paper Scissor</h1>\n            <p className=\"lead\">This is a simple rock paper scissor game that uses Ethereum's Rinkeby network. You should have metamask installed and configured on Rinkeby.</p>\n          </div>\n          <hr className=\"my-2\" />\n          <div>\n            <h4>Game status</h4>\n            <p>Currently <span className='js'>{this.state.playerCount}</span> players have submitted their choice (2 needed to finalise the round).</p>\n            <p>Last game winner: {this.state.last}</p>\n            <FinaliseButton />\n          </div>\n          <hr className=\"my-2\" />\n          <div>\n            <h4>Instructions</h4>\n            <p>Choose for both Alice and Bob (one after the other) what they should play.</p>\n            <p>When the 2 players have sent their choice (button 'Send choice'), you can finalise the game (button 'Check winner' will appear).</p>\n          </div>\n        </Jumbotron>\n      );\n    };\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <div className=\"row justify-content-center\">\n            <div className=\"col-10 col-md-5 m-auto\">\n              <Player \n                name='Alice' \n                index={0}\n                player={this.state.players[0]}/>\n            </div>\n            <div className=\"col-10 col-md-5 m-auto\">\n              <Player \n                name='Bob' \n                index={1} \n                player={this.state.players[1]}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}